{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoInfo","todo","selectedTodoId","onSelectTodo","id","title","completed","className","cn","type","onClick","TodoList","todos","selectTodo","map","TodoFilter","onQueryChange","onSelectChange","query","select","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","currentTodo","onClose","userId","useState","user","setUser","useEffect","getUser","currentUser","name","href","email","App","setTodos","todoId","setTodoId","setQuery","setSelect","shownTodos","find","visibleTodos","filter","toLowerCase","includes","changedQuery","changedSelect","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca2bda76.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodoId: number;\n  onSelectTodo: (id: number) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  selectedTodoId,\n  onSelectTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-success': completed,\n          'has-text-danger': !completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectTodo(id)}\n        >\n          <span className=\"icon\">\n            {selectedTodoId === id\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number;\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map(todo => (\n            <TodoInfo\n              key={todo.id}\n              todo={todo}\n              onSelectTodo={selectTodo}\n              selectedTodoId={selectedTodoId}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onQueryChange: (changedQuery: string) => void;\n  onSelectChange: (changedSelect: string) => void;\n  query: string;\n  select: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onQueryChange,\n  onSelectChange,\n  query,\n  select,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={select}\n          onChange={(e) => onSelectChange(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => onQueryChange(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  currentTodo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n  onClose,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = currentTodo;\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(userId).then(currentUser => setUser(currentUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user?.name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [select, setSelect] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(shownTodos => setTodos(shownTodos));\n  }, []);\n\n  const currentTodo = todos.find(todo => (\n    todo.id === todoId\n  ));\n\n  const closeModal = () => {\n    setTodoId(0);\n  };\n\n  const onQueryChange = (changedQuery: string) => {\n    setQuery(changedQuery);\n  };\n\n  const onSelectChange = (changedSelect: string) => {\n    setSelect(changedSelect);\n  };\n\n  const slectedByStatus = todos.filter(todo => {\n    switch (select) {\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return todo;\n    }\n  });\n\n  const visibleTodos = slectedByStatus.filter(todo => (\n    todo.title.toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQueryChange={onQueryChange}\n                onSelectChange={onSelectChange}\n                query={query}\n                select={select}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={visibleTodos}\n                      selectedTodoId={todoId}\n                      selectTodo={(id: number) => setTodoId(id)}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          currentTodo={currentTodo}\n          onClose={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}